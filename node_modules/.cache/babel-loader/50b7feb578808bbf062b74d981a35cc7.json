{"ast":null,"code":"var _jsxFileName = \"/Users/paulettezaldivarflores/code/Paulette-Zaldivar-Flores/cocktail/src/context/actions/selectedCocktail-actions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext, useCallback } from 'react';\nimport SelectedCocktailReducer from '../reducers/selectedCocktail-reducer';\nimport { CONTEXT_STATUS, SELCOCKTAIL_ACTIONS } from '../constants';\nimport { getCocktailDetails } from '../../api/cocktailApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedCocktailContext = /*#__PURE__*/createContext();\nexport const SELECTED_COCKTAIL_INITIAL = {\n  status: CONTEXT_STATUS.IDLE,\n  data: null,\n  error: null\n};\nexport default function SelectedCocktailContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [selectedCocktail, selectedCocktailDispatcher] = useReducer(SelectedCocktailReducer, SELECTED_COCKTAIL_INITIAL); // UPDATE SELECTED COCKTAIL\n\n  const updateSelectedCocktail = useCallback(async id => {\n    try {\n      selectedCocktailDispatcher({\n        type: SELCOCKTAIL_ACTIONS.LOADING\n      });\n      const data = await getCocktailDetails(id);\n      if (!(data !== null && data !== void 0 && data.drinks) || !data.drinks.length) throw new Error('not_found');\n      selectedCocktailDispatcher({\n        type: SELCOCKTAIL_ACTIONS.UPDATE,\n        payload: {\n          drink: data.drinks[0]\n        }\n      });\n    } catch (error) {\n      console.error(error); // The following error handling may not be the most elegant - consider refactoring later if we have time\n      // Essentially (for now) we are just implementing a way to differientiate between an id not found (404) and an error in the API (400)\n\n      selectedCocktailDispatcher({\n        type: SELCOCKTAIL_ACTIONS.ERROR,\n        payload: {\n          error: {\n            statusCode: error.message === 'not_found' ? 404 : 400,\n            message: error.message === 'not_found' ? `No cocktail found with id: ${id}` : 'Error finding cocktail!  Please try again later. ',\n            details: error\n          }\n        }\n      });\n    }\n  }, []); // CLEAR COCKTAIL\n\n  const clearSelectedCocktail = useCallback(async () => {\n    selectedCocktailDispatcher({\n      type: SELCOCKTAIL_ACTIONS.CLEAR\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SelectedCocktailContext.Provider, {\n    value: {\n      selectedCocktail,\n      updateSelectedCocktail,\n      clearSelectedCocktail\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectedCocktailContextProvider, \"y5C2PJnfzc4z+C77G+F16TUv8Sg=\");\n\n_c = SelectedCocktailContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedCocktailContextProvider\");","map":{"version":3,"names":["React","useReducer","createContext","useCallback","SelectedCocktailReducer","CONTEXT_STATUS","SELCOCKTAIL_ACTIONS","getCocktailDetails","SelectedCocktailContext","SELECTED_COCKTAIL_INITIAL","status","IDLE","data","error","SelectedCocktailContextProvider","children","selectedCocktail","selectedCocktailDispatcher","updateSelectedCocktail","id","type","LOADING","drinks","length","Error","UPDATE","payload","drink","console","ERROR","statusCode","message","details","clearSelectedCocktail","CLEAR"],"sources":["/Users/paulettezaldivarflores/code/Paulette-Zaldivar-Flores/cocktail/src/context/actions/selectedCocktail-actions.js"],"sourcesContent":["import React, { useReducer, createContext, useCallback } from 'react';\nimport SelectedCocktailReducer from '../reducers/selectedCocktail-reducer';\nimport { CONTEXT_STATUS, SELCOCKTAIL_ACTIONS } from '../constants';\nimport { getCocktailDetails } from '../../api/cocktailApi';\n\nexport const SelectedCocktailContext = createContext();\n\nexport const SELECTED_COCKTAIL_INITIAL = {\n  status: CONTEXT_STATUS.IDLE,\n  data: null,\n  error: null,\n};\n\nexport default function SelectedCocktailContextProvider({ children }) {\n  const [selectedCocktail, selectedCocktailDispatcher] = useReducer(\n    SelectedCocktailReducer,\n    SELECTED_COCKTAIL_INITIAL\n  );\n\n  // UPDATE SELECTED COCKTAIL\n  const updateSelectedCocktail = useCallback(async (id) => {\n    try {\n      selectedCocktailDispatcher({\n        type: SELCOCKTAIL_ACTIONS.LOADING,\n      });\n      const data = await getCocktailDetails(id);\n      if (!data?.drinks || !data.drinks.length) throw new Error('not_found');\n      selectedCocktailDispatcher({\n        type: SELCOCKTAIL_ACTIONS.UPDATE,\n        payload: { drink: data.drinks[0] },\n      });\n    } catch (error) {\n      console.error(error);\n      // The following error handling may not be the most elegant - consider refactoring later if we have time\n      // Essentially (for now) we are just implementing a way to differientiate between an id not found (404) and an error in the API (400)\n      selectedCocktailDispatcher({\n        type: SELCOCKTAIL_ACTIONS.ERROR,\n        payload: {\n          error: {\n            statusCode: error.message === 'not_found' ? 404 : 400,\n            message:\n              error.message === 'not_found'\n                ? `No cocktail found with id: ${id}`\n                : 'Error finding cocktail!  Please try again later. ',\n            details: error,\n          },\n        },\n      });\n    }\n  }, []);\n\n  // CLEAR COCKTAIL\n  const clearSelectedCocktail = useCallback(async () => {\n    selectedCocktailDispatcher({\n      type: SELCOCKTAIL_ACTIONS.CLEAR,\n    });\n  }, []);\n\n  return (\n    <SelectedCocktailContext.Provider\n      value={{\n        selectedCocktail,\n        updateSelectedCocktail,\n        clearSelectedCocktail,\n      }}\n    >\n      {children}\n    </SelectedCocktailContext.Provider>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,uBAAP,MAAoC,sCAApC;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAoD,cAApD;AACA,SAASC,kBAAT,QAAmC,uBAAnC;;AAEA,OAAO,MAAMC,uBAAuB,gBAAGN,aAAa,EAA7C;AAEP,OAAO,MAAMO,yBAAyB,GAAG;EACvCC,MAAM,EAAEL,cAAc,CAACM,IADgB;EAEvCC,IAAI,EAAE,IAFiC;EAGvCC,KAAK,EAAE;AAHgC,CAAlC;AAMP,eAAe,SAASC,+BAAT,OAAuD;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACpE,MAAM,CAACC,gBAAD,EAAmBC,0BAAnB,IAAiDhB,UAAU,CAC/DG,uBAD+D,EAE/DK,yBAF+D,CAAjE,CADoE,CAMpE;;EACA,MAAMS,sBAAsB,GAAGf,WAAW,CAAC,MAAOgB,EAAP,IAAc;IACvD,IAAI;MACFF,0BAA0B,CAAC;QACzBG,IAAI,EAAEd,mBAAmB,CAACe;MADD,CAAD,CAA1B;MAGA,MAAMT,IAAI,GAAG,MAAML,kBAAkB,CAACY,EAAD,CAArC;MACA,IAAI,EAACP,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEU,MAAP,KAAiB,CAACV,IAAI,CAACU,MAAL,CAAYC,MAAlC,EAA0C,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;MAC1CP,0BAA0B,CAAC;QACzBG,IAAI,EAAEd,mBAAmB,CAACmB,MADD;QAEzBC,OAAO,EAAE;UAAEC,KAAK,EAAEf,IAAI,CAACU,MAAL,CAAY,CAAZ;QAAT;MAFgB,CAAD,CAA1B;IAID,CAVD,CAUE,OAAOT,KAAP,EAAc;MACde,OAAO,CAACf,KAAR,CAAcA,KAAd,EADc,CAEd;MACA;;MACAI,0BAA0B,CAAC;QACzBG,IAAI,EAAEd,mBAAmB,CAACuB,KADD;QAEzBH,OAAO,EAAE;UACPb,KAAK,EAAE;YACLiB,UAAU,EAAEjB,KAAK,CAACkB,OAAN,KAAkB,WAAlB,GAAgC,GAAhC,GAAsC,GAD7C;YAELA,OAAO,EACLlB,KAAK,CAACkB,OAAN,KAAkB,WAAlB,GACK,8BAA6BZ,EAAG,EADrC,GAEI,mDALD;YAMLa,OAAO,EAAEnB;UANJ;QADA;MAFgB,CAAD,CAA1B;IAaD;EACF,CA7ByC,EA6BvC,EA7BuC,CAA1C,CAPoE,CAsCpE;;EACA,MAAMoB,qBAAqB,GAAG9B,WAAW,CAAC,YAAY;IACpDc,0BAA0B,CAAC;MACzBG,IAAI,EAAEd,mBAAmB,CAAC4B;IADD,CAAD,CAA1B;EAGD,CAJwC,EAItC,EAJsC,CAAzC;EAMA,oBACE,QAAC,uBAAD,CAAyB,QAAzB;IACE,KAAK,EAAE;MACLlB,gBADK;MAELE,sBAFK;MAGLe;IAHK,CADT;IAAA,UAOGlB;EAPH;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAxDuBD,+B;;KAAAA,+B"},"metadata":{},"sourceType":"module"}