{"ast":null,"code":"var _jsxFileName = \"/Users/paulettezaldivarflores/code/Paulette-Zaldivar-Flores/cocktail/src/components/Filters/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DropDown from '../UI/DropDown/DropDown';\nimport { useFiltersContext, useCocktailListContext } from '../../context/use-context';\nimport { CONTEXT_STATUS } from '../../context/constants';\nimport { FilterWrapper } from './Filters.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filters = () => {\n  _s();\n\n  const {\n    filters,\n    updateFilters\n  } = useFiltersContext();\n  const {\n    cocktails,\n    filterCocktails\n  } = useCocktailListContext();\n  const [triggerFilter, setTriggerFilter] = useState(false);\n  const {\n    status,\n    error,\n    allFilters,\n    selectedFilters\n  } = filters; // If the filters were changed by the user, filter the cocktail list\n\n  useEffect(() => {\n    if (triggerFilter) {\n      filterCocktails(selectedFilters);\n      setTriggerFilter(false);\n    }\n  }, [filterCocktails, selectedFilters, triggerFilter]); // Display error in console if there is one; can just show empty drop down boxes if there was an error\n\n  useEffect(() => {\n    if (status === CONTEXT_STATUS.ERROR) console.log(error.message);\n  }, [status, error]); // function used to get filter options for any given filter\n\n  const filterOptions = filterKey => {\n    if (!(allFilters !== null && allFilters !== void 0 && allFilters.hasOwnProperty(filterKey))) return [];\n    if (!allFilters[filterKey].length) return [];\n    return ['Any', ...allFilters[filterKey]];\n  }; // function used to get selected filter for any given filter\n\n\n  const selectedFilter = filterKey => {\n    if (!filterOptions(filterKey).length) return '-';\n    if (!(selectedFilters !== null && selectedFilters !== void 0 && selectedFilters.hasOwnProperty(filterKey))) return 'Any';\n    if (!selectedFilters[filterKey].length) return 'Any';\n    return selectedFilters[filterKey][0];\n  }; // function used to update the given filter with a given value\n\n\n  const updateFilter = (filterKey, newVal) => {\n    updateFilters({\n      [filterKey]: newVal === 'Any' ? [] : [newVal]\n    });\n    setTriggerFilter(true);\n  };\n\n  const isListLoading = cocktails.status === CONTEXT_STATUS.LOADING;\n  return /*#__PURE__*/_jsxDEV(FilterWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(DropDown, {\n      label: \"Category\",\n      currentSelection: selectedFilter('categories'),\n      options: filterOptions('categories'),\n      updateFunc: newVal => updateFilter('categories', newVal),\n      disabled: isListLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      label: \"Alcohol\",\n      currentSelection: selectedFilter('alcoholic'),\n      options: filterOptions('alcoholic'),\n      updateFunc: newVal => updateFilter('alcoholic', newVal),\n      disabled: isListLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      label: \"Glass\",\n      currentSelection: selectedFilter('glasses'),\n      options: filterOptions('glasses'),\n      updateFunc: newVal => updateFilter('glasses', newVal),\n      disabled: isListLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filters, \"6gICHpUGsICr5oQmv/EdZnXr6R8=\", false, function () {\n  return [useFiltersContext, useCocktailListContext];\n});\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useEffect","useState","DropDown","useFiltersContext","useCocktailListContext","CONTEXT_STATUS","FilterWrapper","Filters","filters","updateFilters","cocktails","filterCocktails","triggerFilter","setTriggerFilter","status","error","allFilters","selectedFilters","ERROR","console","log","message","filterOptions","filterKey","hasOwnProperty","length","selectedFilter","updateFilter","newVal","isListLoading","LOADING"],"sources":["/Users/paulettezaldivarflores/code/Paulette-Zaldivar-Flores/cocktail/src/components/Filters/Filters.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DropDown from '../UI/DropDown/DropDown';\nimport {\n  useFiltersContext,\n  useCocktailListContext,\n} from '../../context/use-context';\nimport { CONTEXT_STATUS } from '../../context/constants';\nimport { FilterWrapper } from './Filters.styled';\n\nconst Filters = () => {\n  const { filters, updateFilters } = useFiltersContext();\n  const { cocktails, filterCocktails } = useCocktailListContext();\n  const [triggerFilter, setTriggerFilter] = useState(false);\n\n  const { status, error, allFilters, selectedFilters } = filters;\n\n  // If the filters were changed by the user, filter the cocktail list\n  useEffect(() => {\n    if (triggerFilter) {\n      filterCocktails(selectedFilters);\n      setTriggerFilter(false);\n    }\n  }, [filterCocktails, selectedFilters, triggerFilter]);\n\n  // Display error in console if there is one; can just show empty drop down boxes if there was an error\n  useEffect(() => {\n    if (status === CONTEXT_STATUS.ERROR) console.log(error.message);\n  }, [status, error]);\n\n  // function used to get filter options for any given filter\n  const filterOptions = (filterKey) => {\n    if (!allFilters?.hasOwnProperty(filterKey)) return [];\n    if (!allFilters[filterKey].length) return [];\n    return ['Any', ...allFilters[filterKey]];\n  };\n\n  // function used to get selected filter for any given filter\n  const selectedFilter = (filterKey) => {\n    if (!filterOptions(filterKey).length) return '-';\n    if (!selectedFilters?.hasOwnProperty(filterKey)) return 'Any';\n    if (!selectedFilters[filterKey].length) return 'Any';\n    return selectedFilters[filterKey][0];\n  };\n\n  // function used to update the given filter with a given value\n  const updateFilter = (filterKey, newVal) => {\n    updateFilters({ [filterKey]: newVal === 'Any' ? [] : [newVal] });\n    setTriggerFilter(true);\n  };\n\n  const isListLoading = cocktails.status === CONTEXT_STATUS.LOADING;\n\n  return (\n    <FilterWrapper>\n      <DropDown\n        label='Category'\n        currentSelection={selectedFilter('categories')}\n        options={filterOptions('categories')}\n        updateFunc={(newVal) => updateFilter('categories', newVal)}\n        disabled={isListLoading}\n      />\n      <DropDown\n        label='Alcohol'\n        currentSelection={selectedFilter('alcoholic')}\n        options={filterOptions('alcoholic')}\n        updateFunc={(newVal) => updateFilter('alcoholic', newVal)}\n        disabled={isListLoading}\n      />\n      <DropDown\n        label='Glass'\n        currentSelection={selectedFilter('glasses')}\n        options={filterOptions('glasses')}\n        updateFunc={(newVal) => updateFilter('glasses', newVal)}\n        disabled={isListLoading}\n      />\n    </FilterWrapper>\n  );\n};\n\nexport default Filters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}