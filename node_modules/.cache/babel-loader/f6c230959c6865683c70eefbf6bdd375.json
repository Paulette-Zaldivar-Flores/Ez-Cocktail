{"ast":null,"code":"var _jsxFileName = \"/Users/paulettezaldivarflores/code/Paulette-Zaldivar-Flores/cocktail/src/components/CocktailList/CocktailList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useCocktailListContext } from '../../context/use-context';\nimport { Wrapper, Cocktail, CocktailImage, CocktailName } from './CocktailList.styled';\nimport { CONTEXT_STATUS } from '../../context/constants';\nimport Spinner from '../UI/Spinner/Spinner';\nimport { InfoMessage, ErrorMessage } from '../MessageState/MessageState';\nimport Pagination from '../UI/Pagination/Pagination';\nimport ResultSummary from './ResultSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CocktailList = () => {\n  _s();\n\n  const {\n    cocktails,\n    getRandomCocktails,\n    currentListPage,\n    setCurrentListPage\n  } = useCocktailListContext();\n  const [chunkedCocktails, setChunkedCocktails] = useState([]);\n  const firstRender = useRef(true);\n  const cocktailsPerPage = 9;\n  const {\n    status,\n    error,\n    drinks,\n    totalDrinks,\n    searchTerm\n  } = cocktails;\n  const {\n    IDLE,\n    LOADING,\n    SUCCESS,\n    ERROR\n  } = CONTEXT_STATUS;\n  const haveDrinks = drinks === null || drinks === void 0 ? void 0 : drinks.length; // Only on first render when cocktail API call is idle, render random listof cocktails\n\n  useEffect(() => {\n    if (firstRender.current && status === IDLE) {\n      firstRender.current = false;\n      getRandomCocktails(cocktailsPerPage);\n    }\n  }, [getRandomCocktails, status, IDLE]); // Prevent flashing of previously loaded cocktials just before viewing new set\n\n  useEffect(() => {\n    if (status !== SUCCESS) {\n      setChunkedCocktails([]);\n    }\n  }, [status, SUCCESS]); // If Context API returns a freshlist of cocktails, (re)generate and save chunkedCocktails and set current page to 1\n\n  useEffect(() => {\n    if (haveDrinks) {\n      function chunkArrayInGroups(arr, size) {\n        let chunkedCocktails = [];\n\n        for (let i = 0; i < arr.length; i += size) {\n          chunkedCocktails.push(arr.slice(i, i + size));\n        }\n\n        return chunkedCocktails;\n      }\n\n      const chunkedDrinks = chunkArrayInGroups(drinks, cocktailsPerPage);\n      setChunkedCocktails(chunkedDrinks);\n    }\n  }, [haveDrinks, drinks]);\n  const cocktailList = status === SUCCESS && haveDrinks && generateCocktailListUI(chunkedCocktails[currentListPage - 1]);\n\n  function generateCocktailListUI(drinksToShow) {\n    if (drinksToShow) {\n      const cocktailList = drinksToShow.map((cocktail, i) => {\n        return /*#__PURE__*/_jsxDEV(Cocktail, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/cocktails/${cocktail.idDrink}`,\n            children: [/*#__PURE__*/_jsxDEV(CocktailImage, {\n              src: `${cocktail.strDrinkThumb}/preview`,\n              alt: cocktail.strDrink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CocktailName, {\n              children: cocktail.strDrink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this);\n      });\n      return cocktailList;\n    }\n  }\n\n  function handlePageClick(pageNum) {\n    setCurrentListPage(pageNum);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [status === LOADING && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 30\n    }, this), status === SUCCESS && !!haveDrinks && /*#__PURE__*/_jsxDEV(ResultSummary, {\n      searchTerm: searchTerm,\n      filteredNum: haveDrinks,\n      totalNum: totalDrinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), status === SUCCESS && !!haveDrinks && /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: cocktailList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 46\n    }, this), status === SUCCESS && drinks.length > cocktailsPerPage && /*#__PURE__*/_jsxDEV(Pagination, {\n      chunkedCocktails: chunkedCocktails,\n      currentPage: currentListPage,\n      handlePageClick: handlePageClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), status === SUCCESS && !haveDrinks && /*#__PURE__*/_jsxDEV(InfoMessage, {\n      title: \"No cocktails to display\",\n      message: \"Please try searching again, or adjust the filters you may have selected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), status === ERROR && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      title: \"Error loading cocktails\",\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CocktailList, \"a9t/rKKxMi27Tm3q3IKEulsLZV4=\", false, function () {\n  return [useCocktailListContext];\n});\n\n_c = CocktailList;\nexport default CocktailList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CocktailList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useCocktailListContext","Wrapper","Cocktail","CocktailImage","CocktailName","CONTEXT_STATUS","Spinner","InfoMessage","ErrorMessage","Pagination","ResultSummary","CocktailList","cocktails","getRandomCocktails","currentListPage","setCurrentListPage","chunkedCocktails","setChunkedCocktails","firstRender","cocktailsPerPage","status","error","drinks","totalDrinks","searchTerm","IDLE","LOADING","SUCCESS","ERROR","haveDrinks","length","current","chunkArrayInGroups","arr","size","i","push","slice","chunkedDrinks","cocktailList","generateCocktailListUI","drinksToShow","map","cocktail","idDrink","strDrinkThumb","strDrink","handlePageClick","pageNum","message"],"sources":["/Users/paulettezaldivarflores/code/Paulette-Zaldivar-Flores/cocktail/src/components/CocktailList/CocktailList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useCocktailListContext } from '../../context/use-context';\nimport {\n  Wrapper,\n  Cocktail,\n  CocktailImage,\n  CocktailName,\n} from './CocktailList.styled';\nimport { CONTEXT_STATUS } from '../../context/constants';\nimport Spinner from '../UI/Spinner/Spinner';\nimport { InfoMessage, ErrorMessage } from '../MessageState/MessageState';\nimport Pagination from '../UI/Pagination/Pagination';\nimport ResultSummary from './ResultSummary';\n\nconst CocktailList = () => {\n  const { cocktails, getRandomCocktails, currentListPage, setCurrentListPage } =\n    useCocktailListContext();\n  const [chunkedCocktails, setChunkedCocktails] = useState([]);\n\n  const firstRender = useRef(true);\n  const cocktailsPerPage = 9;\n\n  const { status, error, drinks, totalDrinks, searchTerm } = cocktails;\n  const { IDLE, LOADING, SUCCESS, ERROR } = CONTEXT_STATUS;\n\n  const haveDrinks = drinks?.length;\n\n  // Only on first render when cocktail API call is idle, render random listof cocktails\n  useEffect(() => {\n    if (firstRender.current && status === IDLE) {\n      firstRender.current = false;\n      getRandomCocktails(cocktailsPerPage);\n    }\n  }, [getRandomCocktails, status, IDLE]);\n\n  // Prevent flashing of previously loaded cocktials just before viewing new set\n  useEffect(() => {\n    if (status !== SUCCESS) {\n      setChunkedCocktails([]);\n    }\n  }, [status, SUCCESS]);\n\n  // If Context API returns a freshlist of cocktails, (re)generate and save chunkedCocktails and set current page to 1\n  useEffect(() => {\n    if (haveDrinks) {\n      function chunkArrayInGroups(arr, size) {\n        let chunkedCocktails = [];\n        for (let i = 0; i < arr.length; i += size) {\n          chunkedCocktails.push(arr.slice(i, i + size));\n        }\n        return chunkedCocktails;\n      }\n      const chunkedDrinks = chunkArrayInGroups(drinks, cocktailsPerPage);\n      setChunkedCocktails(chunkedDrinks);\n    }\n  }, [haveDrinks, drinks]);\n\n  const cocktailList =\n    status === SUCCESS &&\n    haveDrinks &&\n    generateCocktailListUI(chunkedCocktails[currentListPage - 1]);\n\n  function generateCocktailListUI(drinksToShow) {\n    if (drinksToShow) {\n      const cocktailList = drinksToShow.map((cocktail, i) => {\n        return (\n          <Cocktail key={i}>\n            <Link to={`/cocktails/${cocktail.idDrink}`}>\n              <CocktailImage\n                src={`${cocktail.strDrinkThumb}/preview`}\n                alt={cocktail.strDrink}\n              />\n              <CocktailName>{cocktail.strDrink}</CocktailName>\n            </Link>\n          </Cocktail>\n        );\n      });\n      return cocktailList;\n    }\n  }\n\n  function handlePageClick(pageNum) {\n    setCurrentListPage(pageNum);\n  }\n\n  return (\n    <>\n      {status === LOADING && <Spinner />}\n      {status === SUCCESS && !!haveDrinks && (\n        <ResultSummary\n          searchTerm={searchTerm}\n          filteredNum={haveDrinks}\n          totalNum={totalDrinks}\n        />\n      )}\n      {status === SUCCESS && !!haveDrinks && <Wrapper>{cocktailList}</Wrapper>}\n      {status === SUCCESS && drinks.length > cocktailsPerPage && (\n        <Pagination\n          chunkedCocktails={chunkedCocktails}\n          currentPage={currentListPage}\n          handlePageClick={handlePageClick}\n        />\n      )}\n      {status === SUCCESS && !haveDrinks && (\n        <InfoMessage\n          title='No cocktails to display'\n          message='Please try searching again, or adjust the filters you may have selected.'\n        />\n      )}\n      {status === ERROR && (\n        <ErrorMessage title='Error loading cocktails' message={error.message} />\n      )}\n    </>\n  );\n};\n\nexport default CocktailList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}